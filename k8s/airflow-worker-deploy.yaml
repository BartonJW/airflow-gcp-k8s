apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  labels:
    run: airflow-worker
    version: "0"
  name: airflow-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      run: airflow-worker
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: airflow-worker
        version: "0"
    spec:
      volumes:
      - name: airflow-home
        persistentVolumeClaim:
          claimName: airflow-home
      - name: service-account
        secret:
          secretName: "service-account"
      - name: ssl-certs
        hostPath:
          path: /etc/ssl/certs
      - name: airflow-config
        configMap:
          name: airflow-config
      containers:
      - image: b.gcr.io/airflow-gcp/airflow-worker:1.8.0.alpha.10
        imagePullPolicy: IfNotPresent
        name: airflow-worker
        env:
        - name: AIRFLOW_HOME
          value: /etc/airflow
        - name: C_FORCE_ROOT
          value: "TRUE" 
        - name: SQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: airflow-settings
              key: sql-database
        - name: SQL_USER
          valueFrom:
            configMapKeyRef:
              name: airflow-settings
              key: sql-user
        - name: SQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: airflow-settings
              key: sql-password
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: mysql+mysqldb://$(SQL_USER):$(SQL_PASSWORD)@airflow-db/$(SQL_DATABASE)
        volumeMounts:
        - name: airflow-home
          mountPath: /home/airflow
        - name: airflow-config
          mountPath: /etc/airflow
        - name: service-account
          mountPath: /secret
        command: ["airflow"]
        args: ["worker"]
        ports:
        - containerPort: 8793
#        resources:
#          limits:
#            cpu: 1500m
#            memory: 1600Mi
#          requests:
#            cpu: 800m
#            memory: 800Mi
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
